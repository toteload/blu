#include "c"

fib :: fn(n: i32) i32 {
  if n <= 1 {
    return 1
  } else {
    return fib(n-1) + fib(n-2)
  }
}

sum :: fn(xs: []i32) i32 {
  s : i32 = 0
  for x in xs {
    s += x
  }
  return s
}

count :: fn(needle: i32, haystack: []i32) i64 {
  s : i64 = 0
  for x in haystack {
    if x == needle {
      s += 1
    }
  }
  return s
}
 
main :: fn() i32 {
  i : i32 = 1
  x : i32 = 2 + 5 * 16 / 4 * 35 + i

  while true {
    if i + 2 * 3 == 10 and true {
      break
    }

    i = i+1

    continue
  }

  return fib(10)
}
